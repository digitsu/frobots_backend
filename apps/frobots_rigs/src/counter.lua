---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by digitsu.
--- DateTime: 2022/1/18 18:58
---

--- counter
--- scans in a counter clockwise fashion for targets
---
---
---

return function(state, ...)
    state = state or {}
    math.randomseed( os.time() )
    state.type = "counter"

    if state.status == nil then
        state.status = "scanning"
        state.res = 1
        state.d = damage()
        state.counter = 1
        state.angle = math.random(360)
        return state
    elseif state.status == "scanning" then
        if state.d ~= damage() then
            state.status = "running"
            state.d = damage()
            return state
        end
        state.range = scan(state.angle, state.res)
        if state.range > 700 and state.range > 0 then
            repeat
                state.counter = state.counter + 1
                drive( state.angle, 50)
            until os.execute("sleep " .. tonumber(10))
            drive( state.angle, 0)
            state.angle = state.angle - 3
            if state.d ~= damage() then
                state.status = "running"
                state.d = damage()
                return state
            end
        elseif state.range <= 700 and state.range > 0 then
            repeat
                fired = cannon( state.angle, state.range )
            until fired == false
            state.angle = state.angle - 15
            if state.d ~= damage() then
                state.status = "running"
                state.d = damage()
                return state
            end
            return state
        else
            if state.d ~= damage() then
                state.status = "running"
                state.d = damage()
                return state
            end
            state.angle = state.angle + state.res
            state.angle = state.angle % 360
            return state
        end
    elseif state.status == "running" then
        state.x = loc_x()
        state.y = loc_y()
        local i = 0
        if state.last_dir == 0 then
            if state.y > 512 then
                state.last_dir = 1
                drive(270, 100)
                repeat
                    i = i + 1
                until state.y - 100 >= loc_y() or i >= 100
                drive(270, 0)
            else
                state.last_dir = 1
                drive(90, 100)
                repeat
                    i = i + 1
                until state.y + 100 <= loc_y() or i >= 100
                drive(90, 0)
            end
        else

            if state.x >= 512 then
                state.last_dir = 0
                drive(180,100)
                repeat
                    i = i + 1
                until state.x - 100 >= loc_x() or i >= 100
                drive(180,0)
            else
                state.last_dir = 0
                drive(0, 100)
                repeat
                    i = i + 1

                until state.x <= loc_x() or i >= 100
                drive( 0,0 )
            end
        end
        if state.d ~= damage() then
            state.status = "running"
            state.d = damage()
            return state
        end
        state.status = "scanning"
    end
    return state
end