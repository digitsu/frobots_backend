# This script builds a docker image for frobots_web, and instructs how to run it alongside a postgres db container

# get all the secrets needed
source .env

#build docker from frobots_backend dir (the dir with the Dockerfile)
docker image build -t elixir/frobots_backend .

# push to host
# aws
# docker save elixir/frobots_web | ssh jerry@ec2-13-231-63-178.ap-northeast-1.compute.amazonaws.com docker load
# linode
docker save elixir/frobots_backend | ssh jerry@172.105.215.192 docker load


# IF you haven't created the docker internal network yet ---------------------
# create a docker network
docker network create frobots-network

# IF you haven't started the post_gres container yet do: ---------------------
# start up a postgres container
docker run --detach --rm --network frobots-network --network-alias postgres-server -e POSTGRES_PASSWORD=$POSTGRES_PASS --name postgres postgres

# check it running (make note of the ID to be used below)
docker ps

# connect to the postgres container (change to the container ID appropriate), and create the database
docker exec -it <container id> psql -U postgres

psql (14.0 (Debian 14.0-1.pgdg110+1))
Type "help" for help.

postgres=# CREATE DATABASE frobots_prod;
CREATE DATABASE
postgres=# \q

# ELSE-----------------------------------------------------------------

# export the env vars in .env for secrets etc etc at this time in the terminal that we will run the elixir app container
# make sure you are in the frobots_backend directory
cd frobots_backend
source .env

# set the env var to point to the postgres container version (the default in .env is a local instance)
export DATABASE_URL=ecto://postgres:$POSTGRES_PASS@postgres-server/frobots_prod
# or do this locally and drive it via a port forward
ssh -N -L '/tmp/docker.sock':'/var/run/docker.sock' -f <user>@<IP HOST>
export DOCKER_HOST=unix:///tmp/docker.sock

# run the elixir app container
docker run --rm -dp $PORT:$PORT -e POOL_SIZE -e PORT -e DATABASE_URL -e SECRET_KEY_BASE -e ADMIN_USER -e ADMIN_PASS --network frobots-network --name frobots_backend elixir/frobots_backend

# MIGRATIONS AND SEEDS -----------------------------------------------------------------
# run the migrations (this tests that the backend can talk to the postgres)
docker exec -it frobots_backend bin/frobots_backend eval "FrobotsWeb.Release.migrate"

# IF you want to start the database from scratch and load the templates from source
docker exec -it frobots_backend bin/frobots_backend eval 'FrobotsWeb.Release.Seeder.seed(Elixir.Frobots.Repo, "seeds.exs")'
