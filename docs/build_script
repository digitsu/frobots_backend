# This script builds a docker image for frobots_web, and instructs how to run it alongside a postgres db container

#build docker from frobots_backend dir (the dir with the Dockerfile)
docker image build -t elixir/frobots_web .

# start up a postgres container
docker run -d --network frobots-network --network-alias postgres-server -e POSTGRES_PASSWORD=supersecret postgres

# check it running (make note of the ID to be used below)
docker ps

# connect to the postgres container (change to the container ID appropriate), and create the database
docker exec -it 8281f722c845 psql -U postgres

psql (14.0 (Debian 14.0-1.pgdg110+1))
Type "help" for help.

postgres=# CREATE DATABASE frobots_prod;
CREATE DATABASE
postgres=# \q


# export the env vars in .env for secrets etc etc at this time in the terminal that we will run the elixir app container
source .env

# set the env var to point to the postgres container version (the default in .env is a local instance)
export DATABASE_URL=ecto://postgres:supersecret@postgres-server/frobots_prod

# run the elixir app container
docker container run -dp $PORT:$PORT -e POOL_SIZE -e PORT -e DATABASE_URL -e SECRET_KEY_BASE --network frobots-network  --name frobots_web elixir/frobots_web

# run the migrations (this tests that the backend can talk to the postgres)
docker exec -it frobots_web bin/frobots_web eval "FrobotsWeb.Release.migrate"
docker exec -it frobots_web bin/frobots_web eval 'FrobotsWeb.Release.Seeder.seed(Elixir.Frobots.Repo, "seeds.exs")'
