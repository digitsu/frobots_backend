
cache:
  key:
    files:
      - mix.lock
  untracked: true
  paths:
    - _build/
    - deps/

stages:
  - build
  - test
  - deploy
  - smoke
  - release



.elixir:
  image: elixir:1.13.4
  # Pick zero or more services to be used on all builds.
  # Only needed when using a docker container to run your tests in.
  # Check out: https://docs.gitlab.com/ee/ci/services/index.html
  services:
  #  - mysql:latest
  #  - redis:latest
    - postgres:latest

  before_script:
    #- docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get --only $MIX_ENV

  variables:
    GIT_SUBMODULE_STRATEGY: normal
    POSTGRES_HOST: postgres
    POSTGRES_PASSWORD: postgres
    WEB_NETWORK: web-network


print-vars:
  tags: ["build"]
  stage: .pre
  script:
    - echo $CI_COMMIT_REF_NAME
    - echo $CI_COMMIT_BRANCH
    - echo $SENDGRID_API_KEY
    - echo $SENDGRID_API_EXPORT_MAILINGLIST_KEY

lint-job:
  tags: ["build"]
  extends: .elixir
  stage: build
  variables:
    MIX_ENV: dev
    SENDGRID_API_KEY: ${SENDGRID_API_KEY}
    SENDGRID_API_EXPORT_MAILINGLIST_KEY: ${SENDGRID_API_EXPORT_MAILINGLIST_KEY}
  allow_failure: false
  script:
    - echo $SENDGRID_API_KEY
    - echo $SENDGRID_API_EXPORT_MAILINGLIST_KEY
    - mix compile --warnings-as-errors --force
    - mix format --check-formatted
  # rules:
  #   - if: $CI_COMMIT_BRANCH == "nevergoingtorun"
    
test-job:
  tags: ["build"]
  extends: .elixir
  stage: test
  variables: 
    MIX_ENV: test

  coverage: '/\d+.\d+\%\s+\|\s+Total/'
  script:
    #- mix test --color apps/fubars/test/
    #- mix test --color apps/frobots/test/
    #- mix test --color apps/frobots_web/test/
    - mix coveralls --umbrella || true
    - mix test --color

  artifacts:
    paths:
      - _build/test/lib/frobots/test-junit-report.xml
      - _build/test/lib/frobots_web/test-junit-report.xml
      - _build/test/lib/fubars/test-junit-report.xml
    reports:
      junit: 
        - _build/test/lib/frobots/test-junit-report.xml
        - _build/test/lib/frobots_web/test-junit-report.xml
        - _build/test/lib/fubars/test-junit-report.xml 

deploy-job:
  tags: ["build"]
  image: $CI_REGISTRY/frobots/builder-main:main
  stage: deploy
  variables:
    POOL_SIZE: 2
    PORT: 4000
    GIT_SUBMODULE_STRATEGY: normal
    
  before_script:
    #- (cd $(mktemp -d) && wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz && tar xvzf * && cp docker/* /usr/local/bin/ && chmod +x /usr/local/bin/*)
  
  script:
    - ./contrib/build.sh
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"

deploy-job-new:
  tags: ["test_docker"]
  image: $CI_REGISTRY/frobots/builder-main:main
  stage: deploy
  variables:
    POOL_SIZE: 2
    PORT: 4000
    GIT_SUBMODULE_STRATEGY: normal
    
  before_script:
    #- (cd $(mktemp -d) && wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz && tar xvzf * && cp docker/* /usr/local/bin/ && chmod +x /usr/local/bin/*)
  
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ./contrib/build_new.sh
  rules:
    #- if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "dev"
  allow_failure: true

server-test:
  image: $CI_REGISTRY/frobots/builder-main:main
  tags: ["prod"]
  stage: smoke
  needs: ["deploy-job"]
  script:
    - ./contrib/test_server.sh https://internal.frobots.io "Welcome to FROBOTS BETA"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
 
release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo $CI_COMMIT_TAG
    - echo $CI_BRANCH_TAG
    - echo $CI_PIPELINE_ID
    - echo $CI_PIPELINE_IID
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
